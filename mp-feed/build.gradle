plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
}

android {
    compileSdkVersion rootProject.ext.build["compileSdkVersion"]
    buildToolsVersion rootProject.ext.build["buildToolsVersion"]

    defaultConfig {
        minSdkVersion rootProject.ext.build["minSdkVersion"]
        targetSdkVersion rootProject.ext.build["targetSdkVersion"]

        versionCode rootProject.ext.build["versionCode"]
        versionName rootProject.ext.build["versionName"]

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {

    implementation project(':mp-basic')
    implementation project(":config")
    implementation fileTree(dir: "../libs", include: ["*.jar", "*.aar"])

    implementation rootProject.ext.dependencies["org.jetbrains.kotlin"]
    implementation rootProject.ext.dependencies["androidx.core"]
    implementation rootProject.ext.dependencies['androidx.appcompat']
    testImplementation rootProject.ext.dependencies['junit']
    androidTestImplementation rootProject.ext.dependencies['androidx.test.ext']
    androidTestImplementation rootProject.ext.dependencies['androidx.test.espresso']

    // todo 依赖传递
    implementation rootProject.ext.dependencies["rxlifecycle-components"]
    implementation rootProject.ext.dependencies["fragmentationx"]
    // 网络
    implementation rootProject.ext.dependencies["retrofit2:retrofit"]
    implementation rootProject.ext.dependencies["retrofit2:converter-scalars"]
    implementation rootProject.ext.dependencies["retrofit2:converter-gson"]
    implementation rootProject.ext.dependencies["retrofit2:adapter-rxjava2"]
    implementation rootProject.ext.dependencies['okhttp3:logging-interceptor']

    implementation rootProject.ext.dependencies['recyclerview']
    implementation rootProject.ext.dependencies['bumptech.glide']

    implementation rootProject.ext.dependencies["refresh-layout-kernel"]     //核心必须依赖
    implementation rootProject.ext.dependencies["refresh-header-classics"]   //经典刷新头
    implementation rootProject.ext.dependencies["refresh-header-radar"]      //雷达刷新头
    implementation rootProject.ext.dependencies["refresh-header-falsify"]    //虚拟刷新头
    implementation rootProject.ext.dependencies["refresh-header-material"]   //谷歌刷新头
    implementation rootProject.ext.dependencies["refresh-header-two-level"]  //二级刷新头
    implementation rootProject.ext.dependencies["refresh-footer-ball"]       //球脉冲加载
    implementation rootProject.ext.dependencies["refresh-footer-classics"]   //经典加载

    implementation rootProject.ext.dependencies['androidx.coordinatorlayout']
    implementation rootProject.ext.dependencies['viewanimator']

//    implementation rootProject.ext.dependencies['wechat']
//    implementation rootProject.ext.dependencies['xrecyclerview']
    implementation rootProject.ext.dependencies['dkplayer-java']
    implementation rootProject.ext.dependencies['dkplayer-ui']
    implementation rootProject.ext.dependencies['dkplayer-exo']
    implementation rootProject.ext.dependencies['dkplayer-ijk']
    implementation rootProject.ext.dependencies['dkplayer-videocache']

    implementation rootProject.ext.dependencies['constraintlayout']


}