apply plugin: 'com.android.application'apply plugin: 'kotlin-android'apply plugin: 'kotlin-android-extensions'def localProperties = new Properties()localProperties.load(new FileInputStream(rootProject.file("local.properties")))android {    compileSdkVersion rootProject.ext.build["compileSdkVersion"]    buildToolsVersion rootProject.ext.build["buildToolsVersion"]    defaultConfig {        applicationId rootProject.ext.build["applicationId"]        minSdkVersion rootProject.ext.build["minSdkVersion"]        targetSdkVersion rootProject.ext.build["targetSdkVersion"]        versionCode rootProject.ext.build["versionCode"]        versionName rootProject.ext.build["versionName"]        /**         * 自定义配置         */        /**         * 通用配置         */        buildConfigField('String', 'api_host', '\"http://i.meepod.cn\"')        testInstrumentationRunner rootProject.ext.build["testInstrumentationRunner"]    }    buildTypes {        release {            minifyEnabled false            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'        }//        debug {//            minifyEnabled true//            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'//        }    }    compileOptions {        sourceCompatibility JavaVersion.VERSION_1_8        targetCompatibility JavaVersion.VERSION_1_8    }    flavorDimensions "channel"    productFlavors {        alioss { dimension "channel" }    }    signingConfigs {        debug {            keyAlias localProperties['keyAlias']            keyPassword localProperties['keyPassword']            storeFile file(localProperties['storeFile'])            storePassword localProperties['storePassword']        }        release {            keyAlias localProperties['keyAlias']            keyPassword localProperties['keyPassword']            storeFile file(localProperties['storeFile'])            storePassword localProperties['storePassword']        }    }}dependencies {    implementation project(':mp-campaign')    implementation project(':mp-basic')    implementation project(':mp-task')    implementation project(':config')    implementation project(':mp-feed')    implementation project(':mp-settings')    implementation project(':mp-user')    implementation fileTree(dir: "../libs", include: ["*.jar", "*.aar"])    implementation rootProject.ext.dependencies["org.jetbrains.kotlin"]    implementation rootProject.ext.dependencies["androidx.core"]    implementation rootProject.ext.dependencies['androidx.appcompat']    testImplementation rootProject.ext.dependencies['junit']    androidTestImplementation rootProject.ext.dependencies['androidx.test.ext']    androidTestImplementation rootProject.ext.dependencies['androidx.test.espresso']    // todo 依赖传递    implementation rootProject.ext.dependencies["rxlifecycle-components"]    implementation rootProject.ext.dependencies["fragmentationx"]    // 网络    implementation rootProject.ext.dependencies["retrofit2:retrofit"]    implementation rootProject.ext.dependencies["retrofit2:converter-scalars"]    implementation rootProject.ext.dependencies["retrofit2:converter-gson"]    implementation rootProject.ext.dependencies["retrofit2:adapter-rxjava2"]    implementation rootProject.ext.dependencies['okhttp3:logging-interceptor']    implementation rootProject.ext.dependencies['um-common']    implementation rootProject.ext.dependencies['um-asms']    implementation rootProject.ext.dependencies['um-share']    implementation rootProject.ext.dependencies['um-share-board']    implementation rootProject.ext.dependencies['um-share-wx']}